# ################################
# Model: VGG2 + LiGRU with time pooling for efficiency
# Additions: TimeDomainSpecAugment
# Authors: Mirco Ravanelli & Peter Plantinga 2020
# ################################

# Seed needs to be set at top of yaml, before objects with parameters are made
seed: 1991
output_root: results
__set_seed: !apply:torch.manual_seed [!ref <seed>]
output_folder: !ref <output_root>/pretrain/clean
stats_file: !ref <output_folder>/stats.txt
save_folder: !ref <output_folder>/save
train_log: !ref <output_folder>/train_log.txt
# Uncomment following to save enhanced audio
#enh_dir: !ref <output_folder>/enhanced_train/

# Data files
data_folder: !PLACEHOLDER # e.g. /path/to/vctk
data_folder_rirs: !ref <data_folder>
train_annotation: !ref <data_folder>/train.json
valid_annotation: !ref <data_folder>/valid.json
test_annotation: !ref <data_folder>/test.json
skip_prep: False

# Training parameters
n_layers: 1
number_of_epochs: 50
ctc_epochs: 10
batch_size: 8
lr_asr: 0.0005
lr_se: 0.00002
checkpoint_avg: 5  # average this many checkpoints for eval
sorting: ascending
eval_max_key: null
eval_min_key: null

dynamic_batching: True

dynamic_batch_sampler:
    feats_hop_size: 0.01
    max_batch_len: 6000 # in terms of frames
    left_bucket_len: 200
    multiplier: 1.2
    shuffle_ex: False # re-create batches at each epoch shuffling examples?
    batch_ordering: random

train_loader_options:
    batch_size: !ref <batch_size>
valid_loader_options:
    batch_size: !ref <batch_size>
    shuffle: False
test_loader_options:
    batch_size: !ref <batch_size>
    shuffle: False
epochs_before_lr_drop: 0

# Loss weights
target_type: phn
enhance_type: noisy  # null, mapping, masking, noisy, clean
enhance_weight: [1]
ctc_weight: [1]
ctc_type: clean  # null, clean, joint
mask_weight: 1.0

frozen_models: [] #, lm_model, src_embedding]
unfreeze_epoch: !ref <epochs_before_lr_drop> + 1
unfrozen_models: []

# Feature parameters
sample_rate: 16000
n_fft: 512
win_length: 32
hop_length: 16
n_mels: 40

# Outputs
dnn_neurons: 512
output_neurons: 42
blank_index: 0
bos_index: 0
eos_index: 0
unk_index: 0

epoch_counter: !new:speechbrain.utils.epoch_loop.EpochCounter
    limit: !ref <number_of_epochs>

compute_stft: !new:speechbrain.processing.features.STFT
    sample_rate: !ref <sample_rate>
    n_fft: !ref <n_fft>
    win_length: !ref <win_length>
    hop_length: !ref <hop_length>

compute_istft: !new:speechbrain.processing.features.ISTFT
    sample_rate: !ref <sample_rate>
    n_fft: !ref <n_fft>
    win_length: !ref <win_length>
    hop_length: !ref <hop_length>

spectral_magnitude: !name:speechbrain.processing.features.spectral_magnitude
    power: 0.5

resynth: !name:speechbrain.processing.signal_processing.resynthesize
    stft: !ref <compute_stft>
    istft: !ref <compute_istft>

# env_corr: !new:speechbrain.lobes.augment.EnvCorrupt
#     openrir_folder: !ref <data_folder_rirs>
#     babble_prob: 0.4
#     reverb_prob: 0.9
#     noise_prob: 1.0
#     noise_snr_low: 0
#     noise_snr_high: 15

augment: !new:speechbrain.lobes.augment.TimeDomainSpecAugment
    sample_rate: !ref <sample_rate>
    speeds: [95, 100, 105]

fbank: !new:CoopNet.ModFbank
    n_mels: !ref <n_mels>
    sample_rate: !ref <sample_rate>
    n_fft: !ref <n_fft>
    win_length: !ref <win_length>
    hop_length: !ref <hop_length>

n_heads: 16
enhance_model: !include:models/enhance_model.yaml
    n_fft: !ref <n_fft>
    nhead: !ref <n_heads>

normalizer: !new:speechbrain.processing.features.InputNormalization
asr_model: !include:models/asr_model.yaml
    n_mels: !ref <n_mels>
    dropout_rate: 0.1
    dnn_neurons: !ref <dnn_neurons>
    output_neurons: !ref <output_neurons>

asr_0: !new:speechbrain.nnet.containers.Sequential
    input_shape: [null, null, !ref <n_mels>]
    asr: !ref <asr_model[asr_0]>
    ctc: !ref <asr_model[ctc_0]>

model: !new:speechbrain.nnet.containers.Sequential
    input_shape: [null, null, !ref <n_fft> // 2 + 1]
    asr_0: !ref <asr_0>
    se_0: !ref <enhance_model[se_0]>

modules:
    model: !ref <model>
    asr_0: !ref <asr_0>
    se_0: !ref <enhance_model[se_0]>

log_softmax: !new:speechbrain.nnet.activations.Softmax
    apply_log: True

# CTC SPECS
multi_optim: True
optim_init_keys: [asr_opt]
opt_class: !name:CoopNet.MultipleOptimizer
    init_keys: !ref <optim_init_keys>
    asr_opt: !name:torch.optim.Adam
        lr: !ref <lr_asr>

update_learning_rate: !name:CoopNet.update_learning_rate

lr_annealing: !new:CoopNet.MultipleOptimizerAnnealing
    init_keys: []
    asr_opt: !new:speechbrain.nnet.schedulers.NewBobScheduler
        initial_value: !ref <lr_asr>
        improvement_threshold: 0.0025
        annealing_factor: 0.8
        patient: 0

checkpointer: !new:speechbrain.utils.checkpoints.Checkpointer
    checkpoints_dir: !ref <save_folder>
    recoverables:
        se_0: !ref <enhance_model[se_0]>
        asr_0: !ref <asr_0>
        counter: !ref <epoch_counter>
        normalizer: !ref <normalizer>

enhance_loss: !name:speechbrain.nnet.losses.mse_loss
ctc_loss: !name:speechbrain.nnet.losses.ctc_loss
    blank_index: !ref <blank_index>

enhance_stats: !name:speechbrain.utils.metric_stats.MetricStats
    metric: !name:speechbrain.nnet.losses.mse_loss
        reduction: batch
estoi_stats: !name:speechbrain.utils.metric_stats.MetricStats
    metric: !name:train.estoi_eval
    n_jobs: 2
pesq_stats: !name:speechbrain.utils.metric_stats.MetricStats
    metric: !name:train.pesq_eval
    n_jobs: 2
err_rate_stats: !name:speechbrain.utils.metric_stats.ErrorRateStats

train_logger: !new:speechbrain.utils.train_logger.FileTrainLogger
    save_file: !ref <train_log>
